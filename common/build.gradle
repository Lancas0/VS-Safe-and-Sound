architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/vsafe.accesswidener")
}

dependencies {
    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:$mixin_extras_version"))

    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    // Remove the next line if you don't want to depend on the API
//    modApi "me.shedaniel:architectury:${rootProject.architectury_version}"
    modApi("org.valkyrienskies:valkyrienskies-120-common:${rootProject.vs2_version}")

    compileOnly("org.valkyrienskies.core:api:${rootProject.vs_core_version}")
    compileOnly("org.valkyrienskies.core:api-game:${rootProject.vs_core_version}")
    compileOnly("org.valkyrienskies.core:util:${rootProject.vs_core_version}")
    compileOnly("org.valkyrienskies.core:impl:${rootProject.vs_core_version}")

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.10"
    api "org.jetbrains.kotlin:kotlin-reflect:1.9.10"


    modImplementation("me.shedaniel.cloth:cloth-config:11.0.99")


    implementation 'com.moandjiezana.toml:toml4j:0.7.2'
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
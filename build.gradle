plugins {
    // Needed for Forge+Fabric
    id "architectury-plugin" version "3.4.146"
    id "dev.architectury.loom" version "1.3.355" apply false
    // Kotlin
    id "org.jetbrains.kotlin.jvm" version "1.9.10" apply false
    // Kotlin linter
    id "org.jlleitschuh.gradle.ktlint" version "10.3.0"
    // Java linter
    id "checkstyle"

    id 'com.matthewprenger.cursegradle' version '1.4.0' apply false
    id "com.modrinth.minotaur" version "2.4.5" apply false
}

// Determine the version
/*if (project.hasProperty("CustomReleaseVersion")) {
    // Remove release/ from the version if present
    version = project.property("CustomReleaseVersion").replaceFirst("^release/", "")
} else {
    try {
        String gitRevision = "git rev-parse HEAD".execute().text.trim()
        version = mod_version + '+' + gitRevision.substring(0, 10)
    } catch (Exception e) {
        version = mod_version
    }
}*/
version = mod_version

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    // Apply checkstyle and ktlint to check the code style of every sub project
    apply plugin: "org.jlleitschuh.gradle.ktlint"
    apply plugin: "checkstyle"
    apply plugin: "org.jetbrains.kotlin.jvm"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        maven {
            name = "ParchmentMC"
            url = "https://maven.parchmentmc.org"
        }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
        }
        maven {
            url "https://maven.squiddev.cc"
            content {
                includeGroup("cc.tweaked")
            }
        }
        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }

        maven {
            // location of the maven that hosts JEI files since January 2023
            // location of the maven for Vazkii's mods
            name = "Jared's maven"
            url = "https://maven.blamejared.com/"
        }

        maven { // Flywheel
            url = "https://maven.tterrag.com/"
            content {
                // need to be specific here due to version overlaps
                includeGroup("com.jozufozu.flywheel")
            }
        }
        maven {
            name "createmod maven"
            url "https://maven.createmod.net/"
        }

        maven {
            // Location of the maven for mixed mappings, Registrate, and Flywheel
            name 'tterrag maven'
            url 'https://maven.tterrag.com'
        }

        maven {
            name = "Curios"
            url = uri("https://maven.theillusivec4.top/")
        }

        maven {
            name = "SquidDev Maven"
            url = "https://squiddev.cc/maven/"
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()

        implementation("org.joml:joml:1.10.4") { transitive = false }
        implementation("org.joml:joml-primitives:1.10.0") { transitive = false }
    }

    checkstyle {
        // configure to use checkstyle v8.41
        toolVersion "8.41"
        // Gradle shouldn't fail builds on checkstyle errors
        ignoreFailures = true
        // Checkstyle config file is in .checkstyle/checkstyle.xml
        configFile = file("${rootDir}/.checkstyle/checkstyle.xml")
    }

    // configure checkstyle, but different
    // https://docs.gradle.org/current/userguide/checkstyle_plugin.html
    tasks.withType(Checkstyle) {
        reports {
            // Do not output html reports
            html.required = false
            // Output xml reports
            xml.required = true
        }
    }

    // configure ktlint
    ktlint {
        ignoreFailures = true
        reporters {
            // configure to output in checkstyle XML format
            reporter "checkstyle"
        }
    }

    kotlin {
        jvmToolchain(17)
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.version
    group = rootProject.maven_group

    repositories {
        mavenLocal()
        maven {
            name = 'Kotlin for Forge'
            url = 'https://thedarkcolour.github.io/KotlinForForge/'
        }
        maven {
            name = "Valkyrien Skies Internal"
            url = 'https://maven.valkyrienskies.org'
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
